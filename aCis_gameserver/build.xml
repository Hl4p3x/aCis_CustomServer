<?xml version="1.0" encoding="UTF-8"?>
<project name="aCis_gameserver" default="dist" basedir=".">

	<property name="src" location="java" />
	<property name="lib" location="lib" />
	<property name="build" location="build" />
	<property name="build.classes" location="${build}/classes" />
	<property name="build.dist" location="${build}/dist" />
	<property name="build.dist.login" location="${build.dist}/login" />
	<property name="build.dist.game" location="${build.dist}/gameserver" />

	<target name="dist" depends="jar">
		<copy todir="${build.dist.login}/libs">
			<fileset dir="${src}/../lib">
				<include name="HikariCP-3.4.2.jar" />
				<include name="mariadb-java-client-2.5.3.jar" />
				<include name="slf4j-api-1.7.30.jar" />
				<include name="slf4j-nop-1.7.30.jar" />
			</fileset>
		</copy>
		<copy todir="${build.dist.game}/libs">
			<fileset dir="${src}/../lib">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy todir="${build.dist.login}">
			<fileset dir="dist">
				<include name="startAccountManager.*" />
				<include name="startSQLAccountManager.*" />
				<include name="LoginServer_loop.sh" />
				<include name="Login.*" />
				<include name="RegisterGameServer.*" />
			</fileset>
		</copy>
		<copy todir="${build.dist.game}">
			<fileset dir="dist">
				<include name="GameServer_loop.sh" />
				<include name="Game.*" />
				<include name="GeoDataConverter.*" />
			</fileset>
		</copy>
		<fixcrlf srcdir="${build.dist.game}" eol="lf" eof="remove" includes="**/*.sh" />
		<fixcrlf srcdir="${build.dist.login}" eol="lf" eof="remove" includes="**/*.sh" />
		<fixcrlf srcdir="${build.dist.game}" eol="crlf" eof="remove" includes="**/*.bat" />
		<fixcrlf srcdir="${build.dist.login}" eol="crlf" eof="remove" includes="**/*.bat" />
		<mkdir dir="${build.dist.game}/log" />
		<mkdir dir="${build.dist.login}/log" />
		<mkdir dir="${build.dist.game}/config" />
		<mkdir dir="${build.dist.login}/config" />
		<copy todir="${build.dist.game}/config">
			<fileset dir="config">
				<include name="*.properties" />
				<exclude name="banned_ips.properties" />
				<exclude name="loginserver.properties" />
			</fileset>
		</copy>
		<copy todir="${build.dist.login}/config">
			<fileset dir="config">
				<include name="banned_ips.properties" />
				<include name="logging.properties" />
				<include name="loginserver.properties" />
			</fileset>
		</copy>
		<mkdir dir="${build.dist.game}/data" />
	</target>

	<target name="jar" depends="compile" description="Create the jar file.">
		<jar destfile="${build}/aCis-384.jar">
			<fileset dir="${build.classes}" />
			<manifest>
				<attribute name="Main-Class" value="net.sf.l2j.Server" />
				<attribute name="Class-Path" value="${manifest.libs}" />
			</manifest>
		</jar>

		<copy todir="${build.dist.login}/libs">
			<fileset dir="${build}">
				<include name="aCis-384.jar" />
			</fileset>
		</copy>

		<copy todir="${build.dist.game}/libs">
			<fileset dir="${build}">
				<include name="aCis-384.jar" />
			</fileset>
		</copy>
	</target>

	<target name="compile" depends="init" description="Compile the source.">
		<javac srcdir="${src}" classpathref="classpath" destdir="${build.classes}" debug="true" debuglevel="lines,vars,source" includeantruntime="false" />
	</target>
	
	<target name="init" depends="clean,checkRequirements" description="Create the output directories.">
		<mkdir dir="${build}" />
		<mkdir dir="${build.classes}" />
		<mkdir dir="${build.dist}" />
		<mkdir dir="${build.dist.login}" />
		<mkdir dir="${build.dist.game}" />
	</target>

	<target name="clean" description="Remove the output directories.">
		<delete dir="${build}" />
	</target>

	<target name="checkRequirements" description="Check requirements.">
		<echo message="Verification of your JDK version."/>
		<available classname="java.util.stream.Stream" property="JDK11.present" />
		<fail unless="JDK11.present" message="JDK11 is required, but your version is Java ${ant.java.version}. Install latest JDK." />
	</target>
	
	<path id="classpath">
		<fileset dir="${lib}">
			<include name="*.jar" />
		</fileset>
	</path>

	<pathconvert property="manifest.libs" pathsep=" ">
		<path refid="classpath" />
		<mapper>
			<chainedmapper>
				<flattenmapper />
				<globmapper from="*.jar" to="../libs/*.jar" />
			</chainedmapper>
		</mapper>
	</pathconvert>
	
</project>